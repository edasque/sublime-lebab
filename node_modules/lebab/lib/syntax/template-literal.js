'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _baseJs = require('./base.js');

var _baseJs2 = _interopRequireDefault(_baseJs);

var _templateElementJs = require('./template-element.js');

var _templateElementJs2 = _interopRequireDefault(_templateElementJs);

var _utilsTypeCheckerJs = require('./../utils/type-checker.js');

var _utilsTypeCheckerJs2 = _interopRequireDefault(_utilsTypeCheckerJs);

/**
 * The class to define the TemplateLiteral syntax
 *
 * @class TemplateLiteral
 */

var TemplateLiteral = (function (_BaseSyntax) {
  _inherits(TemplateLiteral, _BaseSyntax);

  /**
   * Create a template literal
   *
   * @constructor
   */

  function TemplateLiteral() {
    _classCallCheck(this, TemplateLiteral);

    _get(Object.getPrototypeOf(TemplateLiteral.prototype), 'constructor', this).call(this, 'TemplateLiteral');

    this.expressions = [];
    this.quasis = [];
  }

  _createClass(TemplateLiteral, [{
    key: 'createFromArray',
    value: function createFromArray(parts) {

      for (var i = 0; i < parts.length; i++) {
        var curr = parts[i];

        if (_utilsTypeCheckerJs2['default'].isString(curr)) {
          var element = new _templateElementJs2['default']();
          curr = curr.value;

          while (_utilsTypeCheckerJs2['default'].isString(parts[++i])) {
            curr += parts[i].value;
          }

          i--;

          element.setValue(curr);
          this.quasis.push(element);
        } else {
          if (i === 0) {
            var element = new _templateElementJs2['default']();
            this.quasis.push(element);
          }

          if (!_utilsTypeCheckerJs2['default'].isString(parts[i + 1])) {
            var element = new _templateElementJs2['default']();
            this.quasis.push(element);

            if (typeof parts[i + 1] === 'undefined') {
              element.tail = true;
            }
          }

          this.expressions.push(curr);
        }
      }
    }
  }]);

  return TemplateLiteral;
})(_baseJs2['default']);

exports['default'] = TemplateLiteral;
module.exports = exports['default'];